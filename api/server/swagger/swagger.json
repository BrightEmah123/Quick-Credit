{
    "swagger": "2.0",
    "info": {
      "title": "quick-credit",
      "description": "Quick Credit is an online lending platform that provides short term soft loans to individuals.",
      "version": "1.0.0"
    },
    "host": "nowayfarer.herokuapp.com",
    "basePath": "/api/v1/",
    "tags": [
      {
        "name": "quick-credit",
        "description": "Quick Credit is an online lending platform that provides short term soft loans to individuals.",
        "externalDocs": {
          "description": "Find out more",
          "url": "https://BrightEmah123.github.io/wayfarer/ui"
        }
      }
    ],
    "schemes": [
      "https",
      "http"
    ],
    "paths": {
      "/auth/signup": {
        "post": {
          "tags": [
            "auth"
          ],
          "summary": "Create new user",
          "description": "",
          "operationId": "createUser",
          "consumes": [
            "application/json",
            "application/xml"
          ],
          "produces": [
            "application/xml",
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "User object that needs to be added to the app's database",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "User Signup Successful"
            },
            "400": {
              "description": "Required fields can't be empty",
              "content": {}
            },
            "409": {
              "description": "Email already exists",
              "content": {}
            }
          }
        }
      },
      "/auth/signin": {
        "post": {
          "tags": [
            "auth"
          ],
          "summary": "User sign in",
          "operationId": "userSignIn",
          "consumes":[
            "application/json",
            "application/xml"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "description": "User signs in",
              "required": true,
              "schema":{
                "$ref":"#/components/schemas/userSignIn"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "User sign in successfully"
            },
            "400": {
              "description": "Required fields can't be empty",
              "content": {}
            },
            "401": {
              "description": "Invalid email or password",
              "content": {}
            }
          }
        }
      },
      "/trips": {
        "post": {
          "tags": [
            "trips"
          ],
          "summary": "Admin creates trips",
          "operationId": "createTrip",
          "consumes": [
            "application/json",
            "application/xml"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "description": "Admin creates trips",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/createTrip"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Trips created successfully"
            },
            "401": {
              "description": "Unauthorized to create trips"
            }
          }
        },
        "get": {
          "tags": [
            "trips"
          ],
          "summary": "Admin/User gets trips",
          "operationId": "getTrip",
          "consumes": [
            "application/json",
            "application/xml"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "query",
              "in": "query",
              "description": "Origin and/or Destination",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/getTrips"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Trips retrieved successfully"
            },
            "401": {
              "description": "Query not found"
            }
          }
        }
      },
      "/trips/{tripid}": {
        "patch": {
          "tags": [
            "trips"
          ],
          "summary": "Updates a trip status",
          "description": "Updates a trip status from active to cancelled",
          "operationId": "cancelTrip",
          "consumes": [
            "application/json",
            "application/xml"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "tripid",
              "in": "path",
              "description": "Cancels a trip status through it Id",
              "required": true,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "default": "pending",
                  "enum": [
                    "active",
                    "cancelled"
                  ]
                }
            }
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updates a trip status from active to cancelled",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/cancelTrip"
          }
        }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/xml": {
                  "schema": {
                    "type": "object",
                    "items": {
                      "$ref": "#/components/schemas/trip"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "object",
                    "items": {
                      "$ref": "#/definitions/Trip"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Trip already cancelled"
            },
            "404": {
              "description": "Id does not exist"
            }
          }
        }
      },
      "/bookings": {
        "post": {
          "tags": [
            "bookings"
          ],
          "summary": "User books a trip",
          "operationId": "bookTrip",
          "consumes": [
            "application/json",
            "application/xml"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "description": "User books a trip",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/trip"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "successful operation"
            },
            "400": {
              "description": "Trip cancelled"
            },
            "409": {
              "description": "Trip does not exist"
            }
          }
        },
        "get": {
          "tags": [
            "bookings"
          ],
          "summary": "View all bookings",
          "operationId": "getBookings",
          "consumes": [
            "application/json",
            "application/xml"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "petId",
              "in": "path",
              "description": "ID of pet to update",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation"
            },
            "404": {
              "description": "no bookings made"
            }
          }
        }
      },
      "/bookings/{bookingid}": {
        "delete": {
          "tags": [
            "bookings"
          ],
          "summary": "User deletes his/her booked trip",
          "operationId": "delBookings",
          "consumes": [
            "application/json",
            "application/xml"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "User deletes booking",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/bookings"
            }
          }
          ],
          "responses": {
            "200": {
              "description": "successful operation"
            },
            "401": {
              "description": "User Id does not match booking id"
            },
            "404": {
              "description": "Booking id does not exist"
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "User": {
          "type": "object",
          "required": [
            "firstName",
            "lastName",
            "email",
            "password",
            "address",
            "name",
            "bvn"
          ],
          "properties": {
            "firstName": {
              "type": "string"
            },
            "lastName": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "password": {
              "type": "string"
            },
            "address": {
              "type": "string"
            },
            "bvn": {
              "type": "string"
            }
          },
          "xml": {
            "name": "User"
          }
        },
        "UserSignIn": {
          "type": "object",
          "required": [
            "email",
            "password"
          ],
          "properties": {
            "email": {
              "type": "string",
              "example": "joy@gmail.com"
            },
            "password": {
              "type": "string"
            },
            "xml": {
              "name": "UserSignIn"
            }
          }
        },
        "Loan": {
          "type": "object",
          "required": [
            "amount",
            "tenor",
            "loanType",
            "accountNo",
            "userId"
          ],
          "properties": {
            "amount": {
              "type": "integer"
            },
            "tenor": {
              "type": "integer"
            },
            "loanType": {
              "type": "string"
            },
            "accountNo": {
              "type": "string"
            },
            "userId": {
              "type": "string"
            },
            "status": {
              "type": "string"
            },
            "repaid": {
              "type": "string"
            },
            "balance": {
              "type": "integer"
            }
          },
          "xml": {
            "name": "Loan"
          }
        },
        "UpdateLoan": {
          "type": "object",
          "required": [
            "status"
          ],
          "properties": {
            "status": {
              "type": "string",
              "default": "approved",
              "enum": [
                "approved",
                "pending",
                "rejected"
              ]
            }
          },
          "xml": {
            "name": "UpdateLoan"
          }
        },
        "Repayments": {
          "type": "object",
          "properties": {
            "createdOn": {
              "type": "dateTime"
            },
            "loanId": {
              "type": "integer",
              "format": "int64"
            },
            "amount": {
              "type": "float"
            }
          },
          "xml": {
            "name": "Repayments"
          }
        }
      }
    },
    "definitions": {
      "User": {
        "type": "object",
        "properties": {
          "userid": {
            "type": "integer",
            "format": "int64"
          },
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "isadmin": {
            "type": "boolean",
            "default": false
          }
        },
        "xml": {
          "name": "Order"
        }
      },
      "Trip": {
        "type": "object",
        "properties": {
          "tripid": {
            "type": "integer",
            "format": "int64"
          },
          "busid": {
            "type": "integer",
            "format": "int64"
          },
          "origin": {
            "type": "string"
          },
          "destination": {
            "type": "string"
          },
          "tripdate": {
            "type": "date"
          },
          "fare": {
            "type": "float"
          },
          "status": {
            "type": "string",
            "description": "Current trip status",
            "enum": [
              "active",
              "cancelled"
            ],
            "default": "active"
          }
        },
        "xml": {
          "name": "trip"
        }
      },
      "Booking": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "tripid": {
            "type": "integer",
            "format": "int64"
          },
          "userid": {
            "type": "integer",
            "format": "int64"
          },
          "createdon": {
            "type": "date"
          },
          "seatnumber": {
            "type": "integer",
            "format": "int64"
          }
        },
        "xml": {
          "name": "Tag"
        }
      }
    }
  }